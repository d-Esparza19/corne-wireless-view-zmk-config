/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB       &kp Q  &kp W  &kp E             &kp R             &kp T          &kp Y            &kp U      &kp I      &kp O    &kp P     &kp DEL
&sk LEFT_ALT  &kp A  &kp S  &kp D             &kp F             &kp G          &kp H            &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&sk LSHFT     &kp Z  &kp X  &kp C             &kp V             &kp B          &kp N            &kp M      &kp COMMA  &kp DOT  &kp FSLH  &lt 3 ESC
                            &sk LEFT_CONTROL  &mt LEFT_GUI TAB  &lt 1 SPACE    &lt 2 BACKSPACE  &kp ENTER  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&trans  &kp EXCL   &kp AT     &kp POUND      &kp DOLLAR        &kp PERCENT       &kp CARET        &kp AMPERSAND      &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&trans  &kp N1     &kp N2     &kp N3         &kp N4            &kp N5            &kp N6           &kp N7             &kp N8            &kp N9                &kp N0                 &none
&trans  &kp GRAVE  &kp TILDE  &kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN  &none                 &none                  &trans
                              &trans         &trans            &trans            &trans           &trans             &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&trans  &none     &none    &kp UNDER   &kp PLUS     &kp PG_UP        &kp C_VOLUME_UP   &kp C_VOLUME_DOWN  &kp BACKSLASH  &kp PIPE   &none  &none
&trans  &kp HOME  &kp END  &kp MINUS   &kp EQUAL    &kp PG_DN        &kp LEFT          &kp DOWN           &kp UP         &kp RIGHT  &none  &none
&trans  &none     &none    &kp K_COPY  &kp K_PASTE  &kp SEMICOLON    &kp K_PLAY_PAUSE  &kp C_PREV         &kp C_NEXT     &none      &none  &trans
                           &trans      &trans       &trans           &trans            &trans             &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1    &kp F2   &kp F3  &kp F4  &kp F5       &kp F6        &kp F7        &kp F8        &kp F9  &kp F10     &trans
&trans  &kp F11   &kp F12  &none   &none   &none        &none         &none         &none         &none   &none       &none
&trans  &kp CAPS  &none    &none   &none   &kp PSCRN    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  &none   &bt BT_CLR  &trans
                           &trans  &trans  &trans       &trans        &trans        &trans
            >;
        };
    };
};
